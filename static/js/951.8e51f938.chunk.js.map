{"version":3,"file":"static/js/951.8e51f938.chunk.js","mappings":"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","sources":["components/GoBackButton/GoBackButton.jsx","components/MoviesPage/MoviesPageStyled.jsx","pages/MoviesPage.jsx","services/basicData.js","services/api.js"],"sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nconst GoBackButton = ({onClick}) => {\n    return (\n        <CustomButton type=\"click\" onClick={onClick}>\n        Go back\n        </CustomButton>\n    );\n};\n\nexport default GoBackButton;\n\nexport const CustomButton = styled.button`\n    display: block;\n    margin-bottom: ${props => props.theme.spacing(1)};\n    padding: ${props => props.theme.spacing(2)} ${props => props.theme.spacing(4)};\n    border: none;\n    outline: none;\n    border-radius: ${props => props.theme.spacing(1)};\n    cursor: pointer;\n    font-size: ${props => props.theme.spacing(3)};\n    font-weight: 700;\n    background-color: ${props => props.theme.colors.blue};\n    color: ${props => props.theme.colors.white};\n`;","import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport { CustomButton } from '../GoBackButton/GoBackButton';\n\nexport const SearchFormButton = styled(CustomButton)`\n    display: inline;\n    margin-left: ${props => props.theme.spacing(1)};\n`;\n\nexport const SearchFormInput = styled(Field)`\n    width: 50%;\n    font-size: ${props => props.theme.spacing(5)};\n    outline: none;\n    padding-left: ${props => props.theme.spacing(1)};\n    padding-right: ${props => props.theme.spacing(1)};\n    ::placeholder {\n        font-size: ${props => props.theme.spacing(3.5)};\n    }\n`;\n\nexport const FilmList = styled.li`\n    list-style: none;\n    :not(:last-child) {\n        ${props => props.theme.spacing(1)};\n    }\n`;\n\nexport const FilmLink = styled(NavLink)`\n    font-family: Raleway, sans-serif;\n    font-weight: 500;\n    font-size: ${props => props.theme.spacing(3.5)};\n    line-height: 1.2;\n    color: ${props => props.theme.colors.textColor};\n    text-decoration: none;\n    :hover,\n    :focus {\n        color: ${props => props.theme.colors.focusColor};\n    }\n`;","import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport * as API from '../services/api';\nimport { Spinner } from '../components/AppStyled';\nimport {\n    SearchFormButton,\n    SearchFormInput,\n    FilmList,\n    FilmLink,\n} from '../components/MoviesPage/MoviesPageStyled';\n\nconst MoviesPage = () => {\n    const [movies, setMovies] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const location = useLocation();\n    const navigate = useNavigate();\n    let [queryWord, /* setQueryWord */] = useSearchParams();\n    let keyWord = queryWord.get('query');\n\n    //При начальном рендере ключевое слово для поиска пустая строка\n    const initialValues = { query: '' };\n\n    const getData = key => {\n        setLoading(true);\n        API.getMovies(key).then(response => {\n        if (response) {\n            setMovies(response.data.results);\n            setLoading(false);\n        } else {\n            return;\n        }\n        });\n    };\n\n    useEffect(() => {\n        if (keyWord) {\n        getData(keyWord);\n        }\n    }, [keyWord]);\n\n    const handleSubmit = (values, { resetForm }) => {\n        getData(values.query);\n        navigate({\n        search: `?query=${values.query}`,\n        });\n        resetForm();\n    };\n\n    return (\n        <>\n        <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n            <Form>\n            <SearchFormInput\n                name=\"query\"\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search films\"\n            />\n            <SearchFormButton type=\"submit\">Search</SearchFormButton>\n            </Form>\n        </Formik>\n        {loading && <Spinner />}\n        {movies && (\n            <ul>\n            {movies.map(film => (\n                <FilmList key={film.id}>\n                <FilmLink\n                    to={`/movies/${film.id}`}\n                    state={{ from: location, search: keyWord }}\n                >\n                    {film.title} ({film.release_date.slice(0, 4)})\n                </FilmLink>\n                </FilmList>\n            ))}\n            </ul>\n        )}\n        </>\n    );\n};\n\nexport default MoviesPage;","export const BASIC_URL = 'https://api.themoviedb.org/';\nexport const PERSONAL_KEY = '515cd027603607ee4f27d09c5fb79ec3'; //Ключ API (v3 auth)\n// Ключ доступа к API (v4 auth)\nexport const PERSONAL_KEY_V4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3YTczMjI4OWZhYWEwMjFiMzAwYzY3YzgwYzM1Y2FkMSIsInN1YiI6IjYyNmU1NzcyMjQ1ZGJlMzM3ZjQzNzgwOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nGXh-5GwT2pl8pJ7su6oK_01uD4EgHcGzKoNAn_Ubao';\n\n/* Пример API-запроса\nhttps://api.themoviedb.org/3/movie/550?api_key=7a732289faaa021b300c67c80c35cad1 */\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { BASIC_URL, PERSONAL_KEY } from './basicData';\n\nconst getData = async url => {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    toast.error('Sorry, We don`t have this film`s information');\n  }\n};\n\nexport const getReviews = movieId => {\n  const url = `${BASIC_URL}3/movie/${movieId}/reviews?api_key=${PERSONAL_KEY}&language=en-US&page=1`;\n  return getData(url);\n};\n\nexport const getMovieDetails = movieId => {\n  const url = `${BASIC_URL}3/movie/${movieId}?api_key=${PERSONAL_KEY}&language=en-US&page=1`;\n  return getData(url);\n};\n\nexport const getTranding = () => {\n  const url = `${BASIC_URL}3/trending/all/day?api_key=${PERSONAL_KEY}`;\n  return getData(url);\n};\n\nexport const getMovies = query => {\n  const url = `${BASIC_URL}3/search/movie?api_key=${PERSONAL_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n  return getData(url);\n};\n\nexport const getCast = movieId => {\n  const url = `${BASIC_URL}3/movie/${movieId}/credits?api_key=${PERSONAL_KEY}&language=en-US`;\n  return getData(url);\n};\n"],"names":["onClick","CustomButton","type","styled","props","theme","spacing","colors","blue","white","SearchFormButton","SearchFormInput","Field","FilmList","FilmLink","NavLink","textColor","focusColor","useState","movies","setMovies","loading","setLoading","location","useLocation","navigate","useNavigate","useSearchParams","keyWord","get","getData","key","API","then","response","data","results","useEffect","initialValues","query","onSubmit","values","resetForm","search","name","autoComplete","autoFocus","placeholder","map","film","to","id","state","from","title","release_date","slice","BASIC_URL","PERSONAL_KEY","url","axios","toast","getReviews","movieId","getMovieDetails","getTranding","getMovies","getCast"],"sourceRoot":""}